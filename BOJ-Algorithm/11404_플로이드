#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

vector<vector<long long>> map;

int main() {
    
    iostream::sync_with_stdio(false);
    cin.tie(NULL);
    
    int n, m;
    
    cin >> n >> m;
    
    map.assign(n+1, vector<long long>(n+1, 1 << 30));
    
    for (int k = 0; k < m; k++) {
        int i, j, c;
        cin >> i >> j >> c;
        if (map[i][j] > c) map[i][j] = c;
    }
    
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            for (int k = 1; k <= n; k++) {
                if (map[j][k] > map[j][i] + map[i][k]) {
                    map[j][k] = map[j][i] + map[i][k];
                }
            }
        }
    }
    
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            if (i == j || map[i][j] == 1 << 30) cout << 0 << " ";
            else cout << map[i][j] << " ";
        }
        cout << '\n';
    }
    
    return 0;
}

// 플로이드-워셜 알고리즘 사용해 구현.