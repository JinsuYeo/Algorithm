#include <iostream>
#include <algorithm>

using namespace std;

int arr[101][10];


int main() {
	int n{};
	cin >> n;

	for (int i = 1; i < 10; i++) {
		arr[1][i] = 1; //arr[1][0] = 0
	}
	for (int i = 2; i <= n; i++) {
		for (int j = 0; j < 10; j++) {
			if (j == 0) {
				arr[i][j] = arr[i - 1][j + 1];
			}
			else if (j == 9) {
				arr[i][j] = arr[i - 1][j - 1];
			}
			else {
				arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j + 1];
			}
			arr[i][j] %= 1000000000;
		}
	}

	int count{};
	for (int i = 0; i < 10; i++) {
		count += arr[n][i];
		count %= 1000000000;
	}

	cout << count;

	return 0;
}

// 동적 프로그래밍 연습
// 자리마다 1씩 차이나는 두자리수 중 2로 끝나는 수 -> 12, 32 -> 1이나 3이여야만 2로 끝나는 수를 만들 수 있음.
// arr[2][2] = 2 (12, 32 2개) -> (arr[1][1](1, 1개) + arr[1][3](3, 1개) = 2개)
// arr[i][j] = arr[i-1][j-1] + arr[i-1][k+1] (자리마다 1씩 차이나는 i자리수 숫자 중 j로 끝나는 수의 개수는 i-1자리수 숫자중 j-1, j+1로 끝나는 수의 개수의 합, ex)x3에서 x는 2나 4가 들어가야함. 따라서 2개)
// 1000000000은 되도록 많이 나눠주어야 하는듯, 34라인 중요, 수가 너무 커지면 값이 달라지는 듯.