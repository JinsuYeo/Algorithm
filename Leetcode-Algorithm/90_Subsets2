class Solution {
public:

    void rec(vector<vector<int>>& res, const vector<int>& nums, vector<int> v, int depth) {
        if (depth >= nums.size()) {
            res.push_back(v);
            return;
        }

        res.push_back(v);

        for (int i = depth; i < nums.size(); i++) {
            if (i != depth && nums[i] == nums[i-1]) continue;
            v.push_back(nums[i]);
            rec(res, nums, v, i+1);
            v.pop_back();
        }
    }

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        
        sort(nums.begin(), nums.end());

        vector<vector<int>> res;
        vector<int> v;

        rec(res, nums, v, 0);

        return res;
    }
};