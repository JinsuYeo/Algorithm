#include <string>
#include <vector>
#include <algorithm>
#include <deque>
#include <queue>

using namespace std;

struct op {
    char com;
    int num;
};

vector<int> solution(vector<string> operations) {
    vector<int> answer;
    queue<op> q;
    deque<int> dq;
    
    // 명령 순서대로 저장
    for(int i = 0; i < operations.size(); i++) {
        char c = operations[i][0];
        string t = operations[i].substr(2);
        q.push({c, stoi(t)});
    }
    
    // 명령 수행
    while(!q.empty()) {
        char com = q.front().com;
        int num = q.front().num;
        q.pop();
        
        if(com == 'I') {
            dq.push_back(num);
            sort(dq.begin(), dq.end());
        } else if(com == 'D') {
            if(dq.empty()) continue;
            if(num == 1) {
                dq.pop_back();
            } else if(num == -1) {
                dq.pop_front();
            }
        }
    }

    if(dq.empty()) answer = {0, 0};
    else {
        answer.push_back(dq.back());
        answer.push_back(dq.front());
        }
        
    return answer;
}