#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

string n, result, ts;

bool compare(char a, char b){
    return a > b;
}

int main(void) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    cin >> n;
    ts = n;
    sort(ts.begin(), ts.end(), compare);
    
    if (ts.at(ts.length()-1) != '0') {
        cout << -1;
    } else {
        long long ll{};
        for (int i{}; i < ts.length(); i++) {
            ll += static_cast<long long>(ts.at(i));
        }
        if(ll%3 == 0) cout << ts;
        else cout << -1;
    }
    

    
    return 0;
}

// i = 1부터 i <= n의 크기까지 반복하면서 30*i를 string으로 만들고 각 자리를 입력받은 n의 string과 비교해서 각 자리의 숫자를 모두 포함하고 있다면 30*i를 출력하려 했는데 시간 초과가 남.

// 전에 비슷한 문제 풀었던 것이 기억나서 끝자리가 0으로 끝나야 함 + 3*2*5로 소인수분해 되어야 함. 을 이용해 풀어보려 했으나 자리는 바꾸어도 되기 때문에 3, 2, 5로 나뉘어지는지 확인 불가.

// 결국 다른 사람 코드를 보고 풀었는데, 끝자리 0이어야하고, 각 자리수를 더한 값이 3으로 나누어떨어져야 한다고 함. 이를 이용해 구현해서 정답.

// 1시간 넘게 고민하지 말 것을 지키기. 풀 수 있을 것 같아도 못풀기도 하고 더 정답에 가까운 답이 존재할 것이기 때문.

// 참고) n의 배수 판정법
// https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=alwaysneoi&logNo=100200385519